package com.example.MovieTicketBookingSystem.controller;

import org.springframework.web.bind.annotation.*;
import org.springframework.http.ResponseEntity;
import org.springframework.http.HttpStatus;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.multipart.MultipartFile;

import com.example.MovieTicketBookingSystem.entity.Movie;
import com.example.MovieTicketBookingSystem.repository.MovieRepository;

import java.io.IOException;
import java.nio.file.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@RestController
@RequestMapping("/api/movies")
@CrossOrigin(origins = "http://localhost:4200") // Allow requests from Angular frontend
public class MovieController {

    private static final Logger logger = LoggerFactory.getLogger(MovieController.class);

    @Autowired
    private MovieRepository movieRepository;

    @PostMapping("/add")
    public ResponseEntity<String> addMovie(
            @RequestParam("title") String title,
            @RequestParam("genre") String genre,
            @RequestParam("duration") int duration,
            @RequestParam("director") String director,
            @RequestParam("image") MultipartFile image) {
        if (image.isEmpty() || title.isEmpty() || genre.isEmpty() || director.isEmpty() || duration <= 0) {
            return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Invalid input data.");
        }

        try {
            // Define the target directory
            String directory = "D:\\Projects\\image";

            // Ensure the directory exists
            Path imagePath = Paths.get(directory);
            Files.createDirectories(imagePath);

            // Save the image file
            String fileName = System.currentTimeMillis() + "_" + image.getOriginalFilename();
            Path filePath = imagePath.resolve(fileName);
            Files.write(filePath, image.getBytes());

            // Create a Movie object
            Movie movie = new Movie(title, genre, duration, director, filePath.toString());

            // Save to the database
            movieRepository.save(movie);

            logger.info("Movie added successfully: {}", movie);
            return ResponseEntity.status(HttpStatus.CREATED).body("Movie added successfully with image!");
        } catch (IOException e) {
            logger.error("Error saving movie: ", e);
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)
                    .body("Error saving movie: " + e.getMessage());
        }
    }
}
